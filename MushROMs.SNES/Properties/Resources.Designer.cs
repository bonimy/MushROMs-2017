//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MushROMs.SNES.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MushROMs.SNES.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; s a byte array that does not properly serialize an 8x8 GFX tile array with specified format &apos;{1}&apos;. For its format, the size of the array must be a multiple value of &apos;{2}&apos;..
        /// </summary>
        internal static string ErrorCHRFormat {
            get {
                return ResourceManager.GetString("ErrorCHRFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A box selection was expected..
        /// </summary>
        internal static string ErrorNotBoxSelection {
            get {
                return ResourceManager.GetString("ErrorNotBoxSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single selection was expected..
        /// </summary>
        internal static string ErrorNotSingleSelection {
            get {
                return ResourceManager.GetString("ErrorNotSingleSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is a byte array that does not properly serialize a 15-bit color array. For a PAL file, the size of the array should be a mutliple of three. Each color component is described by 8 bits in the order Red, Green, Blue..
        /// </summary>
        internal static string ErrorPALSize {
            get {
                return ResourceManager.GetString("ErrorPALSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is a byte array that does not properly serialize a 15-bit color array. For an RPF file, the size of the array should be even because each SNES color requires two bytes..
        /// </summary>
        internal static string ErrorRPFSize {
            get {
                return ResourceManager.GetString("ErrorRPFSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is a byte array that does not properly serialize a 15-bit color array. For a TPL file, a four byte header (&apos;T&apos;, &apos;P&apos;, &apos;L&apos;, 0x02) is required to verify the format. The specified array does not match the TPL header..
        /// </summary>
        internal static string ErrorTPLFormat {
            get {
                return ResourceManager.GetString("ErrorTPLFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is a byte array that does not properly serialize a 15-bit color array. For a TPL file, a four byte header (&apos;T&apos;, &apos;P&apos;, &apos;L&apos;, 0x02) is required to verify the format. The specified array has a size smaller than four bytes..
        /// </summary>
        internal static string ErrorTPLHeaderSize {
            get {
                return ResourceManager.GetString("ErrorTPLHeaderSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is a byte array that does not properly serialize a 15-bit color array. For a TPL file, the size of the array should be even because each SNES color requires two bytes and should be greater than equal to the size of the TPL header (&apos;T&apos;, &apos;P&apos;, &apos;L&apos;, 0x02)..
        /// </summary>
        internal static string ErrorTPLSize {
            get {
                return ResourceManager.GetString("ErrorTPLSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GFX Editor.
        /// </summary>
        internal static string GFXEditorName {
            get {
                return ResourceManager.GetString("GFXEditorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map16 Editor.
        /// </summary>
        internal static string Obj16EditorName {
            get {
                return ResourceManager.GetString("Obj16EditorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Palette Editor.
        /// </summary>
        internal static string PaletteEditorName {
            get {
                return ResourceManager.GetString("PaletteEditorName", resourceCulture);
            }
        }
    }
}
